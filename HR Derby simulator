namespace Final_Project__Home_run_derby_game;

public class Batter
{
    public string name { get; set; }
    public double power { get; set; }
    public double contact { get; set; }
    public double leftTendency{get; set; }
    public double rightTendency{get; set; }
}

class Program
{


    static void Main(string[] args)
    
    {        Batter[] batters = new Batter[]
        {
            new Batter { name = "Aaron Judge", power = 95, contact = 55, leftTendency=33, rightTendency=33},
            new Batter { name = "Mike Trout", power = 75, contact = 75, leftTendency=66, rightTendency=1 },
            new Batter { name = "Vladimir Guerrero Jr.", power = 90, contact = 60, leftTendency=60, rightTendency=5},
            new Batter { name = "Shohei Ohtani", power = 70, contact = 80, leftTendency=15, rightTendency=50},
            new Batter { name = "Bryce Harper", power = 65, contact = 85, leftTendency=30, rightTendency=65 },
        };

       bool gameOver=false;
       double batterSelectionPower;
       double batterSelectionContact;
       double batterSelectionLTendency;
       double batterSelectionRTendency;
       

//main game loop       
while (!gameOver){
//startup menu
        Console.WriteLine("Welcome to the home run derby!");
        Console.WriteLine("Select your batter! (1-5)");
        Console.WriteLine(" ");

        foreach (Batter batter in batters){
        Console.WriteLine (@$"{batter.name}  
Power: {batter.power}
Contact: {batter.contact}");
Console.WriteLine(" ");}

//accepting user input here
       string batterSelection =
       Console.ReadLine().Trim();


//user's selection choices    
    if (batterSelection == "1"){
        batterSelection= batters[0].name;
        batterSelectionPower= batters[0].power;
        batterSelectionContact=batters[0].contact;
        batterSelectionLTendency=batters[0].leftTendency;
        batterSelectionRTendency=batters[0].rightTendency;
    }
       else if (batterSelection == "2"){
        batterSelection= batters[1].name;
        batterSelectionPower= batters[1].power;
        batterSelectionContact=batters[1].contact;
        batterSelectionLTendency=batters[1].leftTendency;
        batterSelectionRTendency=batters[1].rightTendency;
    }
       else if (batterSelection == "3"){
        batterSelection= batters[2].name;
        batterSelectionPower= batters[2].power;
        batterSelectionContact=batters[2].contact;
        batterSelectionLTendency=batters[2].leftTendency;
        batterSelectionRTendency=batters[2].rightTendency;
    }
       else if (batterSelection == "4"){
        batterSelection= batters[3].name;
        batterSelectionPower= batters[3].power;
        batterSelectionContact=batters[3].contact;
        batterSelectionLTendency=batters[3].leftTendency;
        batterSelectionRTendency=batters[3].rightTendency;
    }
       else if (batterSelection == "5"){
        batterSelection= batters[4].name;
        batterSelectionPower= batters[4].power;
        batterSelectionContact= batters[4].contact;
        batterSelectionLTendency=batters[4].leftTendency;
        batterSelectionRTendency=batters[4].rightTendency;
    }
    else{
        Console.WriteLine("Invalid Selection");
        break;
    }




//Displaying the user's batter choice
Console.WriteLine($"Player Selected: {batterSelection.ToString()}");
Console.WriteLine(" ");
//Console.WriteLine(batterSelectionPower.ToString());
//Console.WriteLine(batterSelectionContact.ToString());

byte outCounter=0;
double maxDistance=0;
double homeRunCounter=0;
double swingCount=0;

Console.WriteLine(@"Please select your desired difficulty level
1= easy
2= medium
3= hard");

double userDifficulty=0;
string selectedDifficulty= 
Console.ReadLine().Trim();

switch(selectedDifficulty){
case "1":{
    userDifficulty=0.75;
    Console.WriteLine("You have selected easy.");
    break;
}
case "2":{
    userDifficulty=1;
    Console.WriteLine("You have selected medium.");
    break;
}
case "3":{
    userDifficulty=1.25;
    Console.WriteLine("You have selected hard. Good luck with that buddy.");
    break;
}
default: {
    userDifficulty=0.75;
    Console.WriteLine("Alright well since you can't follow basic instructions, we're just going to default the difficulty to EASY.");
    break;
}
}

Console.WriteLine(" ");
Console.WriteLine(@$"Welcome to Rogers Center in Toronto. It's a great day for some baseball. {batterSelection.ToString()}
steps up to the plate, settles into the box, and you know he's looking to do some damage.");




while(outCounter<3){

//Now we're creating random number generators for power and contact that will vary depending on difficulty.
//We are also creating random number generators to determine direction
Random random = new Random();

double contactGenerator = (random.Next(3,11)/userDifficulty);
double powerGenerator = (random.Next(3, 8)/userDifficulty);
int directionLGenerator = random.Next(1, 11);
int directionRGenerator = random.Next(1, 11);
bool contactMade;

double contactOdds= (batterSelectionContact*contactGenerator);;

//These dimensions are actually based on Rogers Center new dimensions

int fenceDistanceL= 329;
int fenceDistanceC= 400;
int fenceDistanceR= 328;
int fenceDistance;

double directionLOdds= batterSelectionLTendency*directionLGenerator;
double directionROdds= batterSelectionRTendency*directionRGenerator;


Console.WriteLine(" ");
Console.WriteLine("Press any key to swing");
string swingOption=Console.ReadLine().Trim();

if (swingOption!=null){
    swingCount++;


if (directionLOdds>=165 && directionROdds<165){
    fenceDistance=fenceDistanceL;
}
else if (directionROdds>=165 && directionLOdds<165){
    fenceDistance=fenceDistanceR;
}
else if (directionLOdds>=165 && directionROdds>=165){
    if(directionLOdds>directionROdds){
        fenceDistance=fenceDistanceL;
    }
    else if(directionLOdds<directionROdds){
        fenceDistance=fenceDistanceR;
    }
    else{
        fenceDistance=fenceDistanceC;
    }
}
else{
    fenceDistance=fenceDistanceC;
}


    //Console.WriteLine($"{batterSelectionContact}x{contactGenerator}={contactOdds}");
if (contactOdds>350){
    contactMade= true;
    Console.WriteLine(" ");
    Console.Write("Swung on and drilled ");
    if(fenceDistance==fenceDistanceC){
        Console.WriteLine("to center field...");
    }
    if(fenceDistance==fenceDistanceL){
        Console.WriteLine("to left field...");
    }
    if(fenceDistance==fenceDistanceR){
        Console.WriteLine("to right field...");
    }
}
else {
    contactMade= false;
    Console.WriteLine(" ");
    Console.WriteLine("Swung on and missed. He cannot be happy about that one.");
    outCounter++;
    Console.WriteLine($"That is out number {outCounter.ToString()}.");
    Console.WriteLine($"Score: {homeRunCounter.ToString()}");
    Console.WriteLine(" ");
}



if(contactMade==true){
double powerOdds = (batterSelectionPower*powerGenerator);
//Console.WriteLine($"{batterSelectionPower}x{powerGenerator}={powerOdds}");
if (powerOdds>fenceDistance){
    homeRunCounter++;
    Console.WriteLine("AND IT IS OUT OF HERE!");
    Console.WriteLine($"That went {Math.Round(powerOdds, 2)} feet!");
        if(powerOdds>450 && powerOdds<550){
            Console.WriteLine("Wow! That was an absolute nuke!");
        }
        if(powerOdds>550){
            Console.WriteLine("I don't think that's humanly possible. You may have a random drug test coming your way");
        }
    Console.WriteLine(" ");    
    Console.WriteLine($"Score: {homeRunCounter.ToString()}");
    if(outCounter==1){
        Console.WriteLine($"And there is still only {outCounter.ToString()} out.");}
    else{
        Console.WriteLine($"And there are still {outCounter.ToString()} outs.");}
    Console.WriteLine(" ");
        if(powerOdds>maxDistance){
            maxDistance=powerOdds;
        }       
}
else if(powerOdds<fenceDistance){
    Console.WriteLine("... and it dies out before the wall. That's an out.");
    outCounter++;
    Console.WriteLine($"That is out number {outCounter.ToString()}.");
    Console.WriteLine($"Score: {homeRunCounter.ToString()}");
}
}
}
}



if (outCounter>=3){

Console.WriteLine(" ");
Console.WriteLine("Game over!");
Console.WriteLine(@$"Your score = {homeRunCounter.ToString()}
Batting average = {Math.Round(homeRunCounter/swingCount, 3)}
Longest home run= {Math.Round(maxDistance, 2)} feet!");
Console.WriteLine(" ");
}


Console.WriteLine("Press Y to play again or any other key to exit.");
Console.WriteLine(" ");
string playAgain= Console.ReadLine().ToLower().Trim();
if (playAgain != "y"){
    Console.WriteLine("Thanks for playing. Goodbye!");
    break;
}
}
}
    }
